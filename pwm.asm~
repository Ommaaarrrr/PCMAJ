DUTY_CYCLE_HI DATA 2
DUTY_CYCLE_LO DATA 3
PWM_PERIOD_HI EQU 0CBh
PWM_PERIOD_LO EQU 0EBh
PWM1_FW BIT P2.0
PWM1_BW BIT P2.1
PWM2_FW BIT P2.2
PWM2_BW BIT P2.3
ISX_AXIS BIT 0
IS_FW BIT 1

ORG 0
SJMP MAIN
ORG 000BH
PWM_PERIOD_END:
	CPL ISX_AXIS	;change axis
	SETB TR1	;Period ended, will start sending new duty cycle
	SJMP BWX	;Decide where to send PWM


ORG 001BH
DUTY_CYCLE_END:
	SJMP CLEAR_PWM	;Duty cycle ended, we will wait till to the new period


MAIN:
	MOV TMOD, #00010001b
	MOV TH0, #PWM_PERIOD_HI
	MOV TL0, #PWM_PERIOD_LO
	MOV TH1, DUTY_CYCLE_HI
	MOV TL1, DUTY_CYCLE_LO
	MOV IE, #10001010b
	SETB ISX_AXIS
	SETB TR1
	SETB TR0
	ANL P2, #0F0h			;Clear pins so that first cycle will be empty
	SJMP LOOP
	
BWX:	JNB ISX_AXIS, BWY		;Check if we will send x axis
	JB IS_FW, FWX			;Check if we will turn forward or backwards
	SETB PWM1_BW
	CLR PWM1_FW
	RETI
FWX:
	SETB PWM1_FW
	CLR PWM1_BW
	RETI

BWY: 	JB IS_FW, FWY
	SETB PWM2_BW
	CLR PWM2_FW
	RETI
FWY:
	SETB PWM2_FW
	CLR PWM2_BW

	RETI

CLEAR_PWM:
	JNB ISX_AXIS, CLEAR_FWY
	CLR PWM1_BW
	CLR PWM1_FW
	SJMP NEXT_CYCLE

CLEAR_FWY:
	CLR PWM2_FW
	CLR PWM2_BW
	SJMP NEXT_CYCLE

NEXT_CYCLE:
	CLR TR1
	MOV TH1, DUTY_CYCLE_HI
	MOV TL1, DUTY_CYCLE_LO
	RETI
	
	LOOP:
		SJMP $

END